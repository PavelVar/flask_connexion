openapi: 3.0.0
info:
  title: Flask API with Connexion
  description: Some description
  version: "1.0.0"

servers:
  - url: "/api/v1"

components:
  schemas:
    Currency:
      type: string
      enum: ['USD', 'EUR', 'PLN']

    Product:
      type: "object"
      required:
        - name
        - currency
      properties:
        name:
          type: "string"
          example: "PRODUCT_4"
        currency:
          $ref: "#/components/schemas/Currency"

  parameters:
    name:
      name: "name"
      description: "Name of the product to get"
      in: path
      required: True
      schema:
        type: "string"


paths:
  /prods:
    get:
      operationId: "src.card_products.get_products"
      tags:
        - Card Product
      summary: "The Card Product data structure supported by the server application"
      description: "Read the list of Card Product"
      responses:
        200:
          description: "Successful read Card Product list operation"
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schemas/Product'

    post:
      operationId: "src.card_products.create_product"
      tags:
        - Card Product
      summary: "Create a Card Product"
      requestBody:
        description: "Card Product to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "product"
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: "Successfully created Card Product"
        '406':
          description: 'Empty name or currency'

  /prods/{name}:
    get:
      operationId: "src.card_products.get_one_product"
      tags:
        - Card Product
      summary: "Get one product"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully get product"
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schemas/Product'
        '404':
          description: "Product {name} not found"
    put:
      tags:
        - Card Product
      operationId: "src.card_products.update_product"
      summary: "Update a card product"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully updated card product"
        '404':
          description: "Product {name} not found"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "product"
              $ref: "#/components/schemas/Product"

    delete:
      tags:
        - Card Product
      operationId: "src.card_products.delete_product"
      summary: "Delete a card product"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
           description: "Product {name} successfully deleted"
        '404':
           description: "Product {name} not found"
